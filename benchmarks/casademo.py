import os, shutil
from casatools import ctsys
from casatasks import flagdata

class flagdata_suite:
    """
    An example benchmark that adapts CAS-13490 to asv
    """
    dataroot = ctsys.resolve('/.lustre/naasc/sciops/comm/scastro/casa/Tests/CAS-13490/performance/flagdata_runtime/')
    input_ms = 'uid___A002_Xe1f219_X6d0b_data_autocorr.ms'
    flags_cmd = 'uid___A002_Xe1f219_X6d0b.flagcmds.txt'

    timeout = 1000

    def setup_cache(self):
        # only run once for repeated tests
        pass

    def setup(self):
        # run for each repeated test

        # Delete the MS if already exists
        if os.path.exists(self.input_ms):
            shutil.rmtree(self.input_ms)

        # Copy the flagcmd text file into temporary test directory
        if not os.path.exists(self.flags_cmd):
            shutil.copyfile(os.path.join(self.dataroot, self.flags_cmd), self.flags_cmd)

        # assign our test dataset
        self.datapath = os.path.join(self.dataroot, self.input_ms)

    def time_flagdata_summary(self):
        summary_dict = flagdata(vis=self.datapath, flagbackup=False, mode='summary')

    def time_flagdata_list(self):
        flagdata(vis=self.datapath, mode='list', inpfile=self.flags_cmd, tbuff=[0.048, 0.0], 
                 action='apply', flagbackup=False, savepars=False)

    def teardown(self):
        # remove the data products generated by the task
        os.remove(self.flags_cmd)
        shutil.rmtree(self.input_ms, ignore_errors=True)

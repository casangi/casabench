{
    // The version of the config file format.  Do not change, unless
    // you know what you are doing.
    "version": 1,

    // The name of the project being benchmarked
    "project": "casa6",
    //"project": "cngi",

    // The project's homepage
    "project_url": "https://casa.nrao.edu/",
    //"project_url": "https://cngi-prototype.readthedocs.io/en/latest/",

    // The URL or local path of the source code repository for the
    // project being benchmarked
    "repo": "https://open-bitbucket.nrao.edu/scm/casa/casa6.git",
    //"repo": "https://github.com/casangi/cngi_prototype.git",

    // The Python project's subdirectory in your repo.  If missing or
    // the empty string, the project is assumed to be located at the root
    // of the repository.
    // "repo_subdir": "casatasks",

    // Customizable commands for building, installing, and
    // uninstalling the project. See asv.conf.json documentation.
    //
    // "install_command": ["in-dir={env_dir} python -mpip install {wheel_file}"],
    // "uninstall_command": ["return-code=any python -mpip uninstall -y {project}"],
    // "build_command": [
    //     "python setup.py build",
    //     "PIP_NO_BUILD_ISOLATION=false python -mpip wheel --no-deps --no-index -w {build_cache_dir} {build_dir}"
    // ],

    // "uninstall_command": ["return-code=any python -mpip uninstall -y casatasks casatools"],
    // "build_command": [],
    // "install_command": ["pip install --force-reinstall --index-url https://casa-pip.nrao.edu:443/repository/pypi-group/simple --extra-index-url https://casa-pip.nrao.edu/repository/pypi-casa-release/simple casatools=={commit} casatasks=={commit}"],

    //"build_commmand": [ "in-dir='./casatools' scripts/gcw-pick && autoconf && configure && setup.py build",
    //			"in-dir='./casatasks' PYTHONPATH=../casatools/build/lib.macosx-10.12-x86_64-3.6 ./setup.py build"
    //		      ],

    // "build_command": [
	// // If only our bdist_wheel subclass supported the --target-dir flag e.g., 
	// //"python setup.py bdist_wheel -d {build_cache_dir} {build_dir}",
	// // casatools
	// "in-dir={build_dir}/casatools/scripts python -c 'import os, subprocess; subprocess.call(os.path.join(os.getcwd(), \"gcw-pick\"))'",
	// "in-dir={build_dir}/casatools python -c 'import os, subprocess; subprocess.call(os.path.join(os.getcwd(), \"autoconf\"))'",
	// "in-dir={build_dir}/casatools python -c 'import os, subprocess; subprocess.call(os.path.join(os.getcwd(), \"configure\"))'",
	// "in-dir={build_dir}/casatools python setup.py bdist_wheel",
	// "in-dir={build_dir}/casatasks python -c 'import shutil, os; WHLS = os.listdir(os.environ[\"ASV_BUILD_DIR\"]+\"/casatools/dist/\"); wheel = [fn for fn in WHLS if fn.lower().endswith(\".whl\")]; wheel = wheel[0]; shutil.copyfile((os.path.abspath(\"./dist/\"+wheel)), (os.path.join(os.environ[\"ASV_BUILD_CACHE_DIR\"],wheel)))'",
	// 	// casatasks
	// 	"in-dir={build_dir}/casatasks python setup.py bdist_wheel",
	// 	"in-dir={build_dir}/casatasks python -c 'import shutil, os; WHLS = os.listdir(os.environ[\"ASV_BUILD_DIR\"]+\"/casatasks/dist/\"); wheel = [fn for fn in WHLS if fn.lower().endswith(\".whl\")]; wheel = wheel[0]; shutil.copyfile((os.path.abspath(\"./dist/\"+wheel)), (os.path.join(os.environ[\"ASV_BUILD_CACHE_DIR\"],wheel)))'",
	 // ],
    // // {wheel_file} is only defined for use in this shlex when exactly one wheel is present in {build_cache_dir}
    // "install_command": ["in-dir={env_dir} python -mpip -v install --force-reinstall {wheel_file}"],
    // "install_command": [],
    // "uninstall_command": ["return-code=any python -mpip uninstall -y casatasks"],

    // if both casatasks and casatools will be installed via matrix/includes config,
    // then we won't build from source/wheels and won't uninstall
    "install_command": [],
    "uninstall_command": [],
    "build_command": [],

    // List of branches to benchmark. If not provided, defaults to "master"
    // (for git) or "default" (for mercurial).
    // "branches": ["master"], // for git
    // "branches": ["default"],    // for mercurial

    // The DVCS being used.  If not set, it will be automatically
    // determined from "repo" by looking at the protocol in the URL
    // (if remote), or by looking for special directories, such as
    // ".git" (if local).
    // "dvcs": "git",

    // The tool to use to create environments.  May be "conda",
    // "virtualenv" or other value depending on the plugins in use.
    // If missing or the empty string, the tool will be automatically
    // determined by looking for tools on the PATH environment
    // variable.
    "environment_type": "virtualenv",

    // timeout in seconds for installing any dependencies in environment
    // defaults to 10 min
    //"install_timeout": 600,

    // the base URL to show a commit for the project.
    // "show_commit_url": "http://github.com/owner/project/commit/",
    "show_commit_url": "https://open-bitbucket.nrao.edu/projects/CASA/repos/casa6/commits/",

    // The Pythons you'd like to test against.  If not provided, defaults
    // to the current version of Python used to run `asv`.
    // "pythons": ["2.7", "3.6"],
    "pythons": ["3.6"],

    // The list of conda channel names to be searched for benchmark
    // dependency packages in the specified order
    // "conda_channels": ["conda-forge", "defaults"],

    // The matrix of dependencies to test.  Each key is the name of a
    // package (in PyPI) and the values are version numbers.  An empty
    // list or empty string indicates to just test against the default
    // (latest) version. null indicates that the package is to not be
    // installed. If the package to be tested is only available from
    // PyPi, and the 'environment_type' is conda, then you can preface
    // the package name by 'pip+', and the package will be installed via
    // pip (with all the conda available packages installed first,
    // followed by the pip installed packages).
    //
    // "matrix": {
    //     "numpy": ["1.6", "1.7"],
    //     "six": ["", null],        // test with and without six installed
    //     "pip+emcee": [""],   // emcee is only available for install with pip.
    // },
    //"matrix": {
	// // In case the `wheel unpack && wheel repack --dest-dir` build procedure is needed
	//"wheel": ["0.36.2"],
	// // This doesn't work but it would be great if it did
	//"pip+casatools": [
	//    "6.3.0.32 --extra-index-url \"https://casa-pip.nrao.edu:443/repository/pypi-group/simple\" "
	//],
	// // the workaround is to ensure you have the correct channels included in pip.conf
	// // https://pip.pypa.io/en/stable/topics/configuration/#location
	// // casawheels are not available from conda yet, so prepend both with pip+
        //"pip+casatools": [
	//    "6.2.0.43", "6.3.0.23", // CAS-13428
	//],
        //"pip+casatasks": [
	//    "6.2.0.43", "6.3.0.23", // CAS-13428
	//],
    //}

    // Combinations of libraries/python versions can be excluded/included
    // from the set to test. Each entry is a dictionary containing additional
    // key-value pairs to include/exclude.
    //
    // An exclude entry excludes entries where all values match. The
    // values are regexps that should match the whole string.
    //
    // An include entry adds an environment. Only the packages listed
    // are installed. The 'python' key is required. The exclude rules
    // do not apply to includes.
    //
    // In addition to package names, the following keys are available:
    //
    // - python
    //     Python version, as in the *pythons* variable above.
    // - environment_type
    //     Environment type, as above.
    // - sys_platform
    //     Platform, as in sys.platform. Possible values for the common
    //     cases: 'linux2', 'win32', 'cygwin', 'darwin'.
    //
    // "exclude": [
    //     {"python": "3.2", "sys_platform": "win32"}, // skip py3.2 on windows
    //     {"environment_type": "conda", "six": null}, // don't run without six on conda
    // ],
    //
    // "include": [
    //     // additional env for python2.7
    //     {"python": "2.7", "numpy": "1.8"},
    //     // additional env if run on windows+conda
    //     {"platform": "win32", "environment_type": "conda", "python": "2.7", "libpython": ""},
    // ],
    "exclude": [
         {"environment_type": "virtualenv", "casatools": null}, // don't run without casatools installed
    ],
    "include": [
	//  CAS-13428
        {"python":"3.6", "pip+casatools": "6.1.1.15", "pip+casatasks":"6.1.1.15"},
        {"python":"3.6", "pip+casatools": "6.2.0.43", "pip+casatasks":"6.2.0.43"},
        {"python":"3.6", "pip+casatools": "6.3.0.23", "pip+casatasks":"6.3.0.23"},
	//  many released versions, for lifetime testing of calibration functions
        {"python":"3.6", "pip+casatools": "6.0.0.27", "pip+casatasks":"6.0.0.27"},
        {"python":"3.6", "pip+casatools": "6.1.0.116", "pip+casatasks":"6.1.0.116"},
        {"python":"3.6", "pip+casatools": "6.1.0.118", "pip+casatasks":"6.1.0.118"},
        {"python":"3.6", "pip+casatools": "6.1.2.1", "pip+casatasks":"6.1.2.1"},
        {"python":"3.6", "pip+casatools": "6.1.2.7", "pip+casatasks":"6.1.2.7"},
        {"python":"3.6", "pip+casatools": "6.2.0.124", "pip+casatasks":"6.2.0.124"},
        {"python":"3.6", "pip+casatools": "6.2.1.1", "pip+casatasks":"6.2.1.1"},
        {"python":"3.6", "pip+casatools": "6.2.1.2", "pip+casatasks":"6.2.1.2"},
        {"python":"3.6", "pip+casatools": "6.2.1.3", "pip+casatasks":"6.2.1.3"},
        {"python":"3.6", "pip+casatools": "6.2.1.4", "pip+casatasks":"6.2.1.4"},
        {"python":"3.6", "pip+casatools": "6.2.1.5", "pip+casatasks":"6.2.1.5"},
        {"python":"3.6", "pip+casatools": "6.2.1.6", "pip+casatasks":"6.2.1.6"},
        {"python":"3.6", "pip+casatools": "6.3.0.2", "pip+casatasks":"6.3.0.2"},
        {"python":"3.6", "pip+casatools": "6.3.0.3", "pip+casatasks":"6.3.0.3"},
        {"python":"3.6", "pip+casatools": "6.3.0.4", "pip+casatasks":"6.3.0.4"},
        {"python":"3.6", "pip+casatools": "6.3.0.5", "pip+casatasks":"6.3.0.5"},
        {"python":"3.6", "pip+casatools": "6.3.0.7", "pip+casatasks":"6.3.0.7"},
        {"python":"3.6", "pip+casatools": "6.3.0.8", "pip+casatasks":"6.3.0.8"},
        {"python":"3.6", "pip+casatools": "6.3.0.9", "pip+casatasks":"6.3.0.9"},
        {"python":"3.6", "pip+casatools": "6.3.0.10", "pip+casatasks":"6.3.0.10"},
        {"python":"3.6", "pip+casatools": "6.3.0.11", "pip+casatasks":"6.3.0.11"},
        {"python":"3.6", "pip+casatools": "6.3.0.12", "pip+casatasks":"6.3.0.12"},
        {"python":"3.6", "pip+casatools": "6.3.0.13", "pip+casatasks":"6.3.0.13"},
        {"python":"3.6", "pip+casatools": "6.3.0.14", "pip+casatasks":"6.3.0.14"},
        {"python":"3.6", "pip+casatools": "6.3.0.15", "pip+casatasks":"6.3.0.15"},
        {"python":"3.6", "pip+casatools": "6.3.0.16", "pip+casatasks":"6.3.0.16"},
        {"python":"3.6", "pip+casatools": "6.3.0.17", "pip+casatasks":"6.3.0.17"},
        {"python":"3.6", "pip+casatools": "6.3.0.18", "pip+casatasks":"6.3.0.18"},
        {"python":"3.6", "pip+casatools": "6.3.0.19", "pip+casatasks":"6.3.0.19"},
        {"python":"3.6", "pip+casatools": "6.3.0.20", "pip+casatasks":"6.3.0.20"},
        {"python":"3.6", "pip+casatools": "6.3.0.21", "pip+casatasks":"6.3.0.21"},
        {"python":"3.6", "pip+casatools": "6.3.0.22", "pip+casatasks":"6.3.0.22"},
        {"python":"3.6", "pip+casatools": "6.3.0.23", "pip+casatasks":"6.3.0.23"},
        {"python":"3.6", "pip+casatools": "6.3.0.25", "pip+casatasks":"6.3.0.25"},
        {"python":"3.6", "pip+casatools": "6.3.0.26", "pip+casatasks":"6.3.0.26"},
        {"python":"3.6", "pip+casatools": "6.3.0.27", "pip+casatasks":"6.3.0.27"},
        {"python":"3.6", "pip+casatools": "6.3.0.28", "pip+casatasks":"6.3.0.28"},
        {"python":"3.6", "pip+casatools": "6.3.0.29", "pip+casatasks":"6.3.0.29"},
        {"python":"3.6", "pip+casatools": "6.3.0.30", "pip+casatasks":"6.3.0.30"},
        {"python":"3.6", "pip+casatools": "6.3.0.32", "pip+casatasks":"6.3.0.32"},
        {"python":"3.6", "pip+casatools": "6.3.0.34", "pip+casatasks":"6.3.0.34"},
        {"python":"3.6", "pip+casatools": "6.3.0.35", "pip+casatasks":"6.3.0.35"},
        {"python":"3.6", "pip+casatools": "6.3.0.36", "pip+casatasks":"6.3.0.36"},
        {"python":"3.6", "pip+casatools": "6.3.0.37", "pip+casatasks":"6.3.0.37"},
        {"python":"3.6", "pip+casatools": "6.3.0.38", "pip+casatasks":"6.3.0.38"},
        {"python":"3.6", "pip+casatools": "6.3.0.39", "pip+casatasks":"6.3.0.39"},
    ],


    // The directory (relative to the current directory) that benchmarks are
    // stored in.  If not provided, defaults to "benchmarks"
    // "benchmark_dir": "benchmarks",

    // The directory (relative to the current directory) to cache the Python
    // environments in.  If not provided, defaults to "env"
    // "env_dir": "env",

    // The directory (relative to the current directory) that raw benchmark
    // results are stored in.  If not provided, defaults to "results".
    // "results_dir": "results",

    // The directory (relative to the current directory) that the html tree
    // should be written to.  If not provided, defaults to "html".
    // "html_dir": "html",

    // The number of characters to retain in the commit hashes.
    // "hash_length": 8,

    // `asv` will cache results of the recent builds in each
    // environment, making them faster to install next time.  This is
    // the number of builds to keep, per environment.
    // "build_cache_size": 2,

    // The commits after which the regression search in `asv publish`
    // should start looking for regressions. Dictionary whose keys are
    // regexps matching to benchmark names, and values corresponding to
    // the commit (exclusive) after which to start looking for
    // regressions.  The default is to start from the first commit
    // with results. If the commit is `null`, regression detection is
    // skipped for the matching benchmark.
    //
    // "regressions_first_commits": {
    //    "some_benchmark": "352cdf",  // Consider regressions only after this commit
    //    "another_benchmark": null,   // Skip regression detection altogether
    // },

    // The thresholds for relative change in results, after which `asv
    // publish` starts reporting regressions. Dictionary of the same
    // form as in ``regressions_first_commits``, with values
    // indicating the thresholds.  If multiple entries match, the
    // maximum is taken. If no entry matches, the default is 5%.
    //
    // "regressions_thresholds": {
    //    "some_benchmark": 0.01,     // Threshold of 1%
    //    "another_benchmark": 0.5,   // Threshold of 50%
    // },
}
